
package com.softwareaggov.messaging.service.soapclient;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "RequestReplyService", targetNamespace = "http://com.softwareaggov.messaging/jaxws/jms", wsdlLocation = "http://aws_jboss1:8080/j2ee-jms-examples-server-ejb/RequestReplyService/RequestReplyProcessing?wsdl")
public class RequestReplyService
    extends Service
{

    private final static URL REQUESTREPLYSERVICE_WSDL_LOCATION;
    private final static WebServiceException REQUESTREPLYSERVICE_EXCEPTION;
    private final static QName REQUESTREPLYSERVICE_QNAME = new QName("http://com.softwareaggov.messaging/jaxws/jms", "RequestReplyService");

    private final static String WSDL_LOCATION = "/META-INF/wsdl/RequestReplyProcessing.wsdl";
    static {
        REQUESTREPLYSERVICE_WSDL_LOCATION = RequestReplyService.class.getResource(WSDL_LOCATION);
        WebServiceException e = null;
        if (REQUESTREPLYSERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find '" + WSDL_LOCATION + "' wsdl. Place the resource correctly in the classpath.");
        }
        REQUESTREPLYSERVICE_EXCEPTION = e;
    }

    public RequestReplyService() {
        super(__getWsdlLocation(), REQUESTREPLYSERVICE_QNAME);
    }

    public RequestReplyService(WebServiceFeature... features) {
        super(__getWsdlLocation(), REQUESTREPLYSERVICE_QNAME, features);
    }

    public RequestReplyService(URL wsdlLocation) {
        super(wsdlLocation, REQUESTREPLYSERVICE_QNAME);
    }

    public RequestReplyService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, REQUESTREPLYSERVICE_QNAME, features);
    }

    public RequestReplyService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RequestReplyService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns RequestReplyProcessing
     */
    @WebEndpoint(name = "RequestReplyPort")
    public RequestReplyProcessing getRequestReplyPort() {
        return super.getPort(new QName("http://com.softwareaggov.messaging/jaxws/jms", "RequestReplyPort"), RequestReplyProcessing.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RequestReplyProcessing
     */
    @WebEndpoint(name = "RequestReplyPort")
    public RequestReplyProcessing getRequestReplyPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://com.softwareaggov.messaging/jaxws/jms", "RequestReplyPort"), RequestReplyProcessing.class, features);
    }

    private static URL __getWsdlLocation() {
        if (REQUESTREPLYSERVICE_EXCEPTION!= null) {
            throw REQUESTREPLYSERVICE_EXCEPTION;
        }
        return REQUESTREPLYSERVICE_WSDL_LOCATION;
    }

}
