
package com.softwareaggov.messaging.service.utils;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import com.softwareaggov.messaging.service.soapclient.RequestReplyProcessing;
import com.softwareaggov.messaging.service.soapclient.RequestReplyService;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Random;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2016-06-30T20:33:36.335-04:00
 * Generated source version: 3.1.6
 *
 */
public final class RequestReplyProcessing_RequestReplyPort_Client {

    private RequestReplyProcessing_RequestReplyPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = null;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        RequestReplyService ss = (null != wsdlURL)?new RequestReplyService(wsdlURL):new RequestReplyService();
        RequestReplyProcessing port = ss.getRequestReplyPort();


        Random rnd = new Random(System.currentTimeMillis());
        {
             java.lang.String _performMultiplicationFromStrings_arg0 = new Integer(rnd.nextInt()).toString();
            java.lang.String _performMultiplicationFromStrings_arg1 = new Integer(rnd.nextInt()).toString();
            System.out.println(String.format("Invoking performMultiplicationFromStrings(%s,%s)",_performMultiplicationFromStrings_arg0,_performMultiplicationFromStrings_arg1));
            java.lang.String _performMultiplicationFromStrings__return = port.performMultiplicationFromStrings(_performMultiplicationFromStrings_arg0, _performMultiplicationFromStrings_arg1);
            System.out.println("performMultiplicationFromStrings.result=" + _performMultiplicationFromStrings__return);
        }

        {
            System.out.println("Invoking getRandomNumber...");
            java.lang.Long _getRandomNumber__return = port.getRandomNumber();
            System.out.println("getRandomNumber.result=" + _getRandomNumber__return);
        }

        System.exit(0);
    }

}
