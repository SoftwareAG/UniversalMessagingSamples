<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>j2ee-jms-examples-server</artifactId>
        <groupId>com.softwareaggov.messaging</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>j2ee-jms-examples-server-ear</artifactId>
    <packaging>ear</packaging>

    <name>j2ee-jms-examples-server - ear</name>

    <url>http://jboss.org/jbossas</url>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>

    <dependencies>
        <!-- Depend on the ejb module and war so that we can package them -->
        <dependency>
            <groupId>com.softwareaggov.messaging</groupId>
            <artifactId>j2ee-jms-examples-server-web</artifactId>
            <version>1.0-SNAPSHOT</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>com.softwareaggov.messaging</groupId>
            <artifactId>j2ee-jms-examples-server-ejb</artifactId>
            <version>1.0-SNAPSHOT</version>
            <type>ejb</type>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.parent.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ear-plugin</artifactId>
                <version>${version.ear.plugin}</version>
                <configuration>
                    <!-- Tell Maven we are using Java EE 6 -->
                    <version>6</version>
                    <!-- Use Java EE ear libraries as needed. Java EE ear libraries 
                        are in easy way to package any libraries needed in the ear, and automatically 
                        have any modules (EJB-JARs and WARs) use them -->
                    <defaultLibBundleDir>lib</defaultLibBundleDir>
                    <modules>
                        <!-- Default context root of the web app is /j2ee-jms-examples-web.
                            If a custom context root is needed, uncomment the following snippet to
                            register our War as a web module and set the contextRoot property -->
                        <webModule>
                            <groupId>com.softwareaggov.messaging</groupId>
                            <artifactId>j2ee-jms-examples-server-web</artifactId>
                            <contextRoot>/j2ee-jms-examples-server</contextRoot>
                        </webModule>
                    </modules>
                    <fileNameMapping>no-version</fileNameMapping>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>jboss</id>
            <build>
                <plugins>
                    <!-- The JBoss AS plugin deploys your ear to a local JBoss EAP container -->
                    <!-- Due to Maven's lack of intelligence with EARs we need to configure
                        the jboss-as maven plugin to skip deployment for all modules. We then enable
                        it specifically in the ear module. -->
                    <plugin>
                        <groupId>org.jboss.as.plugins</groupId>
                        <artifactId>jboss-as-maven-plugin</artifactId>
                        <!-- Only remote server needs -->
                        <configuration>
                            <skip>false</skip>
                            <hostname>${deploy.target.ip}</hostname>
                            <port>${deploy.target.port}</port>
                            <username>${deploy.target.username}</username>
                            <password>${deploy.target.password}</password>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
