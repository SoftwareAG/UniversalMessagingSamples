
package com.softwareaggov.messaging.service.soapclient;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 */
@WebServiceClient(name = "RequestReplyService", targetNamespace = "http://com.softwareaggov.messaging/j2ee-jms-examples/requestreply", wsdlLocation = "file:///Users/fabien.sanglier/MyDev/github-open-source/messaging-samples/j2ee-jms-examples/j2ee-jms-examples-client/ejb/src/main/resources/META-INF/wsdl/RequestReplyHttpService.wsdl")
public class RequestReplyService
        extends Service {

    private final static URL REQUESTREPLYSERVICE_WSDL_LOCATION;
    private final static WebServiceException REQUESTREPLYSERVICE_EXCEPTION;
    private final static QName REQUESTREPLYSERVICE_QNAME = new QName("http://com.softwareaggov.messaging/j2ee-jms-examples/requestreply", "RequestReplyService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:///Users/fabien.sanglier/MyDev/github-open-source/messaging-samples/j2ee-jms-examples/j2ee-jms-examples-client/ejb/src/main/resources/META-INF/wsdl/RequestReplyHttpService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        REQUESTREPLYSERVICE_WSDL_LOCATION = url;
        REQUESTREPLYSERVICE_EXCEPTION = e;
    }

    public RequestReplyService() {
        super(__getWsdlLocation(), REQUESTREPLYSERVICE_QNAME);
    }

    public RequestReplyService(WebServiceFeature... features) {
        super(__getWsdlLocation(), REQUESTREPLYSERVICE_QNAME, features);
    }

    public RequestReplyService(URL wsdlLocation) {
        super(wsdlLocation, REQUESTREPLYSERVICE_QNAME);
    }

    public RequestReplyService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, REQUESTREPLYSERVICE_QNAME, features);
    }

    public RequestReplyService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RequestReplyService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns RequestReplyServicePortType
     */
    @WebEndpoint(name = "RequestReplyServicePort")
    public RequestReplyServicePortType getRequestReplyServicePort() {
        return super.getPort(new QName("http://com.softwareaggov.messaging/j2ee-jms-examples/requestreply", "RequestReplyServicePort"), RequestReplyServicePortType.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns RequestReplyServicePortType
     */
    @WebEndpoint(name = "RequestReplyServicePort")
    public RequestReplyServicePortType getRequestReplyServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://com.softwareaggov.messaging/j2ee-jms-examples/requestreply", "RequestReplyServicePort"), RequestReplyServicePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (REQUESTREPLYSERVICE_EXCEPTION != null) {
            throw REQUESTREPLYSERVICE_EXCEPTION;
        }
        return REQUESTREPLYSERVICE_WSDL_LOCATION;
    }

}
