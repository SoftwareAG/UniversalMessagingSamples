<project name="J2EE JMS Examples" default="assemble" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant" xmlns:if="ant:if">
    <description>build file</description>

    <condition property="build.customprofiles.properties.exist" value="true">
        <available file="build.customprofiles.properties"/>
    </condition>
    <property file="build.customprofiles.properties" if:true="${build.customprofiles.properties.exist}"/>
    <property file="build.properties"/>
    <property environment="env"/>

    <target name="init.ant.contrib">
        <path id="ant.contrib.classpath" path="${j2ee-jms-examples.lib.dir}/ant-contrib.jar"/>
        <taskdef classpathref="ant.contrib.classpath" resource="net/sf/antcontrib/antlib.xml"/>
    </target>

    <!-- Maven task Initialization -->
    <target name="init.maven">
        <property name="mvn_home" value="${env.MAVEN_HOME}"/>
        <property name="mvn_home" value="${env.M2_HOME}"/>
        <property name="mvn_home" value="${maven.home}"/>

        <fail message="Path to &quot;maven_home&quot; must be set. You can set it in application build.properties or in either MAVEN_HOME or M2_HOME environment variable.">
            <condition>
                <and>
                    <equals arg1="${mvn_home}" arg2="" trim="true"/>
                </and>
            </condition>
        </fail>

        <mkdir dir="${j2ee-jms-examples.lib.dir}"/>

        <get src="http://central.maven.org/maven2/org/apache/maven/maven-ant-tasks/2.1.3/maven-ant-tasks-2.1.3.jar"
             dest="${j2ee-jms-examples.lib.dir}/maven-ant-tasks-2.1.3.jar" usetimestamp="true"/>

        <path id="maven-ant-tasks.classpath" path="${j2ee-jms-examples.lib.dir}/maven-ant-tasks-2.1.3.jar"/>

        <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
                 uri="antlib:org.apache.maven.artifact.ant"
                 classpathref="maven-ant-tasks.classpath"/>
    </target>

    <!-- Initialization -->
    <target name="init" description="Generic initialization steps for the project" depends="init.ant.contrib,init.maven">
        <mkdir dir="${j2ee-jms-examples.target.dir}"/>
    </target>

    <target name="clean_target_dir" description="Cleaning target dist dir">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${j2ee-jms-examples.target.dir}" includes="*.ear"/>
        </delete>

        <echo message="Cleaning completed fortarget dist dir"/>
    </target>

    <!-- Clean runtime -->
    <target name="clean" description="Cleaning all projects" depends="init">
        <artifact:mvn pom="pom.xml" mavenHome="${mvn_home}" fork="true" failonerror="true">
            <jvmarg value="-Dmaven.multiModuleProjectDirectory"/>
            <arg value="clean"/>
            <arg value="-P ${mvn_profile}"/>
        </artifact:mvn>
        <echo message="Cleaning completed for all projects"/>
    </target>

    <target name="package" description="Compiles the sources and creates runtime jar" depends="init,clean">
        <property name="regex" value="^([^_-]*)[_-]?(.*)$"/>

        <propertyregex
                property="app.name"
                input="${profile}"
                regexp="${regex}"
                select="\1"
                casesensitive="false"/>

        <propertyregex
                property="build.name"
                input="${profile}"
                regexp="${regex}"
                select="\2"
                casesensitive="false"/>

        <echo>app.name = ${app.name}</echo>
        <echo>build.name = ${build.name}</echo>

        <if>
            <or>
                <equals arg1="${build.name}" arg2="" trim="true"/>
                <equals arg1="${build.name}" arg2="default" trim="true"/>
            </or>
            <then>
                <property name="property.file.name" value="build.properties"/>
            </then>
            <else>
                <property name="property.file.name" value="build.${build.name}.properties"/>
            </else>
        </if>

        <echo>Building with properties in: ${basedir}/${app.name}/${property.file.name}</echo>

        <artifact:mvn pom="pom.xml" mavenHome="${mvn_home}" fork="true" failonerror="true">
            <jvmarg value="-Dmaven.multiModuleProjectDirectory"/>
            <arg value="package"/>
            <arg value="-DskipTests"/>
            <arg value="-Dbuild.properties=${basedir}/${app.name}/${property.file.name}"/>
            <arg value="-P ${j2ee-jms-examples.deployment_target}"/>
            <arg value="-P ${j2ee-jms-examples.compiler.target}"/>
            <arg value="-P logging_${j2ee-jms-examples.logging.level}"/>
        </artifact:mvn>
    </target>

    <target name="assemble" description="Creates server jar" depends="init,clean_target_dir">
        <for list="${j2ee-jms-examples.deployment_profiles}" param="profile">
            <sequential>
                <trycatch reference="exception_ref">
                    <try>
                        <echo message="@{profile}"/>
                        <echo>Building profile @{profile}</echo>
                        <antcall target="package">
                            <param name="profile" value="@{profile}"/>
                        </antcall>

                        <if>
                            <contains string="@{profile}" substring="${j2ee-jms-examples.simpleJmsSend.dir}" casesensitive="false"/>
                            <then>
                                <copy todir="${j2ee-jms-examples.target.dir}">
                                    <fileset file="${j2ee-jms-examples.simpleJmsSend.dir}/ear/target/*.ear"/>
                                </copy>
                            </then>
                        </if>

                        <if>
                            <contains string="@{profile}" substring="${j2ee-jms-examples.simpleJmsConsume.dir}" casesensitive="false"/>
                            <then>
                                <copy todir="${j2ee-jms-examples.target.dir}">
                                    <fileset file="${j2ee-jms-examples.simpleJmsConsume.dir}/ear/target/*.ear"/>
                                </copy>
                            </then>
                        </if>
                    </try>
                    <catch>
                        <echo message="Build for profile '@{profile}' failed"/>
                    </catch>
                </trycatch>
            </sequential>
        </for>
    </target>
</project>
