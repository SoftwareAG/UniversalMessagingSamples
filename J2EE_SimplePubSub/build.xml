<project name="J2EE JMS Examples" default="assemble" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">
    <description>build file</description>

    <property file="build.properties"/>

    <property environment="env"/>

    <target name="init.ant.contrib">
        <path id="ant.contrib.classpath" path="${j2ee-jms-examples.lib.dir}/ant-contrib.jar"/>
        <taskdef classpathref="ant.contrib.classpath" resource="net/sf/antcontrib/antlib.xml"/>
    </target>

    <!-- Maven task Initialization -->
    <target name="init.maven">
        <property name="mvn_home" value="${env.MAVEN_HOME}"/>
        <property name="mvn_home" value="${env.M2_HOME}"/>
        <property name="mvn_home" value="${maven.home}"/>

        <fail message="Path to &quot;maven_home&quot; must be set. You can set it in application build.properties or in either MAVEN_HOME or M2_HOME environment variable.">
            <condition>
                <and>
                    <equals arg1="${mvn_home}" arg2="" trim="true"/>
                </and>
            </condition>
        </fail>

        <mkdir dir="${j2ee-jms-examples.lib.dir}"/>

        <get src="http://central.maven.org/maven2/org/apache/maven/maven-ant-tasks/2.1.3/maven-ant-tasks-2.1.3.jar"
             dest="${j2ee-jms-examples.lib.dir}/maven-ant-tasks-2.1.3.jar" usetimestamp="true"/>

        <path id="maven-ant-tasks.classpath" path="${j2ee-jms-examples.lib.dir}/maven-ant-tasks-2.1.3.jar"/>

        <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
                 uri="antlib:org.apache.maven.artifact.ant"
                 classpathref="maven-ant-tasks.classpath"/>
    </target>

    <!-- Initialization -->
    <target name="init" description="Generic initialization steps for the project" depends="init.ant.contrib,init.maven">
    <mkdir dir="${j2ee-jms-examples.target.dir}"/>
    </target>

    <target name="clean_target_dir" description="Cleaning target dist dir">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${j2ee-jms-examples.target.dir}" includes="*.ear"/>
        </delete>

        <echo message="Cleaning completed fortarget dist dir"/>
    </target>

    <!-- update pom version based on the build property version -->
    <target name="version" description="Update the versions on the maven submodules" depends="init">
    <artifact:mvn pom="pom.xml" mavenHome="${mvn_home}" fork="true" failonerror="true">
            <jvmarg value="-Dmaven.multiModuleProjectDirectory"/>
            <jvmarg value="-DnewVersion=${j2ee-jms-examples.version}"/>
            <arg value="versions:set"/>
        </artifact:mvn>
    </target>

    <!-- Clean runtime -->
    <target name="clean" description="Cleaning all projects" depends="init">
        <artifact:mvn pom="pom.xml" mavenHome="${mvn_home}" fork="true" failonerror="true">
            <jvmarg value="-Dmaven.multiModuleProjectDirectory"/>
            <arg value="clean"/>
            <arg value="-P ${mvn_profile}"/>
        </artifact:mvn>

        <!--<delete includeemptydirs="true" failonerror="false">-->
        <!--<fileset dir="${j2ee-jms-examples.target.dir}" includes="*.ear" />-->
        <!--</delete>-->

        <echo message="Cleaning completed for all projects"/>
    </target>

    <!-- Compile and build runtime -->
    <target name="package_defaults" description="Compiles the sources and creates runtime jar" depends="init,clean">
        <artifact:mvn pom="pom.xml" mavenHome="${mvn_home}" fork="true" failonerror="true">
            <jvmarg value="-Dmaven.multiModuleProjectDirectory"/>
            <arg value="package"/>
            <arg value="-DskipTests"/>
            <arg value="-P ${j2ee-jms-examples.deployment_target}"/>
        </artifact:mvn>
    </target>

    <target name="package_profiles" description="Compiles the sources and creates runtime jar" depends="init,clean">
        <artifact:mvn pom="pom.xml" mavenHome="${mvn_home}" fork="true" failonerror="true">
            <jvmarg value="-Dmaven.multiModuleProjectDirectory"/>
            <arg value="package"/>
            <arg value="-DskipTests"/>
            <arg value="-P ${j2ee-jms-examples.deployment_target}"/>
            <arg value="-P ${mvn_profile}"/>
        </artifact:mvn>
    </target>

    <target name="copy.ear.simpleJmsConsume" description="Capy ear to dist folder">
        <echo>In copy.ear.simpleJmsConsume</echo>

        <copy todir="${j2ee-jms-examples.target.dir}">
            <fileset file="${j2ee-jms-examples.simpleJmsConsume.dir}/ear/target/*.ear"/>
        </copy>
    </target>

    <target name="copy.ear.simpleJmsSend" description="Capy ear to dist folder">
        <echo>In copy.ear.simpleJmsSend</echo>

        <copy todir="${j2ee-jms-examples.target.dir}">
            <fileset file="${j2ee-jms-examples.simpleJmsSend.dir}/ear/target/*.ear"/>
        </copy>
    </target>

    <target name="assemble" description="Creates server jar" depends="init,clean_target_dir">
        <for list="${j2ee-jms-examples.deployment_profiles}" param="profile">
            <sequential>
                <trycatch reference="exception_ref">
                    <try>
                        <echo message="@{profile}"/>

                        <if>
                            <or>
                                <equals arg1="@{profile}" arg2="${j2ee-jms-examples.simpleJmsConsume.dir}_default" trim="true"/>
                                <equals arg1="@{profile}" arg2="${j2ee-jms-examples.simpleJmsConsume.dir}-default" trim="true"/>
                                <equals arg1="@{profile}" arg2="${j2ee-jms-examples.simpleJmsConsume.dir}" trim="true"/>
                                <equals arg1="@{profile}" arg2="${j2ee-jms-examples.simpleJmsSend.dir}_default" trim="true"/>
                                <equals arg1="@{profile}" arg2="${j2ee-jms-examples.simpleJmsSend.dir}-default" trim="true"/>
                                <equals arg1="@{profile}" arg2="${j2ee-jms-examples.simpleJmsSend.dir}" trim="true"/>
                            </or>
                            <then>
                                <echo>Building defaults</echo>
                                <antcall target="package_defaults">
                                    <param name="mvn_profile" value="@{profile}"/>
                                </antcall>
                            </then>
                            <else>
                                <echo>Building profile @{profile}</echo>
                                <antcall target="package_profiles">
                                    <param name="mvn_profile" value="@{profile}"/>
                                </antcall>
                            </else>
                        </if>

                        <if>
                            <contains string="@{profile}" substring="${j2ee-jms-examples.simpleJmsSend.dir}" casesensitive="false"/>
                            <then>
                                <antcall target="copy.ear.simpleJmsSend"/>
                            </then>
                        </if>

                        <if>
                            <contains string="@{profile}" substring="${j2ee-jms-examples.simpleJmsConsume.dir}" casesensitive="false"/>
                            <then>
                                <antcall target="copy.ear.simpleJmsConsume"/>
                            </then>
                        </if>
                    </try>
                    <catch>
                        <echo message="Build for profile '@{profile}' failed"/>
                    </catch>
                </trycatch>
            </sequential>
        </for>
    </target>
</project>
