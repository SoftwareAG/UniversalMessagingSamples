<project name="J2EE JMS Examples" default="assemble_all_apps" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">
    <description>build file</description>

    <property file="build.properties"/>

    <property environment="env"/>

    <path id="classpath">
        <fileset dir="${j2ee-jms-examples.lib.dir}" includes="**/*.jar"/>
    </path>

    <!-- Maven task Initialization -->
    <target name="init.maven">
        <property name="mvn_home" value="${env.MAVEN_HOME}"/>
        <property name="mvn_home" value="${env.M2_HOME}"/>
        <property name="mvn_home" value="${maven.home}"/>

        <fail message="Path to &quot;maven_home&quot; must be set. You can set it in application build.properties or in either MAVEN_HOME or M2_HOME environment variable.">
            <condition>
                <and>
                    <equals arg1="${mvn_home}" arg2="" trim="true"/>
                </and>
            </condition>
        </fail>

        <mkdir dir="${j2ee-jms-examples.lib.dir}"/>

        <get src="http://central.maven.org/maven2/org/apache/maven/maven-ant-tasks/2.1.3/maven-ant-tasks-2.1.3.jar"
             dest="${j2ee-jms-examples.lib.dir}/maven-ant-tasks-2.1.3.jar" usetimestamp="true"/>

        <path id="maven-ant-tasks.classpath" path="${j2ee-jms-examples.lib.dir}/maven-ant-tasks-2.1.3.jar"/>

        <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
                 uri="antlib:org.apache.maven.artifact.ant"
                 classpathref="maven-ant-tasks.classpath"/>
    </target>

    <!-- Initialization -->
    <target name="init" description="Generic initialization steps for the project">
        <mkdir dir="${j2ee-jms-examples.target.dir}"/>
    </target>

    <!-- Clean runtime -->
    <target name="clean" description="Cleaning all projects" depends="init.maven, init">
        <artifact:mvn pom="pom.xml" mavenHome="${mvn_home}" fork="true" failonerror="true">
            <jvmarg value="-Dmaven.multiModuleProjectDirectory"/>
            <arg value="clean"/>
            <arg value="-P ${mvn_profile}"/>
        </artifact:mvn>

        <!--<delete includeemptydirs="true" failonerror="false">-->
        <!--<fileset dir="${j2ee-jms-examples.target.dir}" includes="*.ear" />-->
        <!--</delete>-->

        <echo message="Cleaning completed for all projects"/>
    </target>

    <target name="clean_target_dir" description="Cleaning target dist dir">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${j2ee-jms-examples.target.dir}" includes="*.ear"/>
        </delete>

        <echo message="Cleaning completed fortarget dist dir"/>
    </target>

    <!-- update pom version based on the build property version -->
    <target name="version" description="Update the versions on the maven submodules" depends="init.maven">
        <artifact:mvn pom="pom.xml" mavenHome="${mvn_home}" fork="true" failonerror="true">
            <jvmarg value="-Dmaven.multiModuleProjectDirectory"/>
            <jvmarg value="-DnewVersion=${j2ee-jms-examples.version}"/>
            <arg value="versions:set"/>
        </artifact:mvn>
    </target>

    <!-- Compile and build runtime -->
    <target name="package_apps" description="Compiles the sources and creates runtime jar" depends="clean, init">
        <artifact:mvn pom="pom.xml" mavenHome="${mvn_home}" fork="true" failonerror="true">
            <jvmarg value="-Dmaven.multiModuleProjectDirectory"/>
            <arg value="package"/>
            <arg value="-DskipTests"/>
        </artifact:mvn>
    </target>

    <target name="package_profiles" description="Compiles the sources and creates runtime jar" depends="clean, init">
        <artifact:mvn pom="pom.xml" mavenHome="${mvn_home}" fork="true" failonerror="true">
            <jvmarg value="-Dmaven.multiModuleProjectDirectory"/>
            <arg value="package"/>
            <arg value="-DskipTests"/>
            <arg value="-P ${mvn_profile}"/>
        </artifact:mvn>
    </target>

    <!--<target name="docker.build" description="Build the docker image" depends="package_all">-->
    <!--<artifact:mvn pom="${j2ee-jms-examples.server.dir}/pom.xml" mavenHome="${mvn_home}" fork="true" failonerror="true">-->
    <!--<jvmarg value="-Dmaven.multiModuleProjectDirectory" />-->
    <!--<arg value="docker:build" />-->
    <!--<arg value="-DskipTests" />-->
    <!--</artifact:mvn>-->
    <!--</target>-->

    <!--<target name="docker.push" description="Deploy the docker image to docker-hub" depends="docker.build">-->
    <!--<artifact:mvn pom="${j2ee-jms-examples.server.dir}/pom.xml" mavenHome="${mvn_home}" fork="true" failonerror="true">-->
    <!--<jvmarg value="-Dmaven.multiModuleProjectDirectory" />-->
    <!--<arg value="docker:push" />-->
    <!--<arg value="-DskipTests" />-->
    <!--</artifact:mvn>-->
    <!--</target>-->

    <target name="assemble_defaults" description="Creates server jar" depends="clean_target_dir">
        <!-- default builds -->
        <antcall target="package_profiles">
            <param name="mvn_profile" value="${j2ee-jms-examples.deployment_target}"/>
        </antcall>
        <copy todir="${j2ee-jms-examples.target.dir}">
            <fileset file="${j2ee-jms-examples.simpleJmsConsume.dir}/ear/target/*.ear"/>
            <fileset file="${j2ee-jms-examples.simpleJmsSend.dir}/ear/target/*.ear"/>
        </copy>
    </target>

    <target name="assemble_all_apps" description="Creates server jar" depends="clean_target_dir, assemble_defaults">
        <!-- Some other JMS Send for a different queues or use cases -->
        <antcall target="package_profiles">
            <param name="mvn_profile" value="SimpleJmsSend_driverQueue,${j2ee-jms-examples.deployment_target}"/>
        </antcall>
        <copy todir="${j2ee-jms-examples.target.dir}">
            <fileset file="${j2ee-jms-examples.simpleJmsSend.dir}/ear/target/*.ear"/>
        </copy>

        <!-- Some other JMS Consume for a different queues or use cases -->
        <antcall target="package_profiles">
            <param name="mvn_profile" value="SimpleJmsConsume_noreply,${j2ee-jms-examples.deployment_target}"/>
        </antcall>
        <copy todir="${j2ee-jms-examples.target.dir}">
            <fileset file="${j2ee-jms-examples.simpleJmsConsume.dir}/ear/target/*.ear"/>
        </copy>

        <antcall target="package_profiles">
            <param name="mvn_profile" value="SimpleJmsConsume_clonenreply,${j2ee-jms-examples.deployment_target}"/>
        </antcall>
        <copy todir="${j2ee-jms-examples.target.dir}">
            <fileset file="${j2ee-jms-examples.simpleJmsConsume.dir}/ear/target/*.ear"/>
        </copy>

        <antcall target="package_profiles">
            <param name="mvn_profile" value="SimpleJmsConsume_overridenreply,${j2ee-jms-examples.deployment_target}"/>
        </antcall>
        <copy todir="${j2ee-jms-examples.target.dir}">
            <fileset file="${j2ee-jms-examples.simpleJmsConsume.dir}/ear/target/*.ear"/>
        </copy>

        <antcall target="package_profiles">
            <param name="mvn_profile" value="SimpleJmsConsume_replyqueue,${j2ee-jms-examples.deployment_target}"/>
        </antcall>
        <copy todir="${j2ee-jms-examples.target.dir}">
            <fileset file="${j2ee-jms-examples.simpleJmsConsume.dir}/ear/target/*.ear"/>
        </copy>

        <antcall target="package_profiles">
            <param name="mvn_profile" value="SimpleJmsConsume_driverqueue,${j2ee-jms-examples.deployment_target}"/>
        </antcall>
        <copy todir="${j2ee-jms-examples.target.dir}">
            <fileset file="${j2ee-jms-examples.simpleJmsConsume.dir}/ear/target/*.ear"/>
        </copy>

        <echo message="Build execution completed for runtime and server. The binaries are placed at - ${j2ee-jms-examples.target.dir}"/>
    </target>

    <target name="assemble_all_customer_apps" description="Creates server jar" depends="clean_target_dir">
        <!-- Some other JMS Send for a different queues or use cases -->
        <antcall target="package_profiles">
            <param name="mvn_profile" value="SimpleJmsSend_customer1,${j2ee-jms-examples.deployment_target}"/>
        </antcall>
        <copy todir="${j2ee-jms-examples.target.dir}">
            <fileset file="${j2ee-jms-examples.simpleJmsSend.dir}/ear/target/*.ear"/>
        </copy>

        <!-- Some other JMS Send for a different queues or use cases -->
        <antcall target="package_profiles">
            <param name="mvn_profile" value="SimpleJmsConsume_customer1.driverqueue,${j2ee-jms-examples.deployment_target}"/>
        </antcall>
        <copy todir="${j2ee-jms-examples.target.dir}">
            <fileset file="${j2ee-jms-examples.simpleJmsConsume.dir}/ear/target/*.ear"/>
        </copy>

        <antcall target="package_profiles">
            <param name="mvn_profile" value="SimpleJmsConsume_customer1.overridenreply,${j2ee-jms-examples.deployment_target}"/>
        </antcall>
        <copy todir="${j2ee-jms-examples.target.dir}">
            <fileset file="${j2ee-jms-examples.simpleJmsConsume.dir}/ear/target/*.ear"/>
        </copy>

        <antcall target="package_profiles">
            <param name="mvn_profile" value="SimpleJmsConsume_customer1.replyqueue,${j2ee-jms-examples.deployment_target}"/>
        </antcall>
        <copy todir="${j2ee-jms-examples.target.dir}">
            <fileset file="${j2ee-jms-examples.simpleJmsConsume.dir}/ear/target/*.ear"/>
        </copy>

        <echo message="Build execution completed for runtime and server. The binaries are placed at - ${j2ee-jms-examples.target.dir}"/>
    </target>
</project>
